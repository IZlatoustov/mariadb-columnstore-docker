{
  "paragraphs": [
    {
      "text": "%md\n## JDBC vs API Write Benchmark\nImport needed packets and set connections up",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:23:41.064",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eJDBC vs API Write Benchmark\u003c/h2\u003e\n\u003cp\u003eImport needed packets and set connections up\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532518385940_955654848",
      "id": "20180724-154057_1976865111",
      "dateCreated": "2018-07-25 11:33:05.940",
      "dateStarted": "2018-08-04 13:23:41.125",
      "dateFinished": "2018-08-04 13:23:41.144",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import com.mariadb.columnstore.api.ColumnStoreDriver\nimport com.mariadb.columnstore.api.connector.ColumnStoreExporter\nimport java.util.Properties\nimport org.apache.spark.sql.{SQLContext,DataFrame}\nimport org.apache.spark.sql.functions.{rand, randn, sha1, sha2, md5}\nimport java.sql.{DriverManager,Connection,Date,Timestamp,PreparedStatement,ResultSet,SQLException}\n\nval url \u003d \"jdbc:mysql://10.5.0.2:3306\"\n\nvar connectionProperties \u003d new Properties()\nconnectionProperties.put(\"user\", \"zeppelin_user\")\nconnectionProperties.put(\"password\", \"zeppelin_pass\")\nconnectionProperties.put(\"driver\", \"org.mariadb.jdbc.Driver\")\n\nval sqlContext \u003d new SQLContext(sc)\nimport sqlContext.implicits._\n\n// SampleDataframe size parameter:\nval asciiRange \u003d 128\nval randRange \u003d 1000\nval hashRange \u003d 1000",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:23:41.224",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true,
        "tableHide": false,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import com.mariadb.columnstore.api.ColumnStoreDriver\nimport com.mariadb.columnstore.api.connector.ColumnStoreExporter\nimport java.util.Properties\nimport org.apache.spark.sql.{SQLContext, DataFrame}\nimport org.apache.spark.sql.functions.{rand, randn, sha1, sha2, md5}\nimport java.sql.{DriverManager, Connection, Date, Timestamp, PreparedStatement, ResultSet, SQLException}\nurl: String \u003d jdbc:mysql://10.5.0.2:3306\nconnectionProperties: java.util.Properties \u003d {}\nres77: Object \u003d null\nres78: Object \u003d null\nres79: Object \u003d null\nwarning: there was one deprecation warning; re-run with -deprecation for details\nsqlContext: org.apache.spark.sql.SQLContext \u003d org.apache.spark.sql.SQLContext@36849467\nimport sqlContext.implicits._\nasciiRange: Int \u003d 128\nrandRange: Int \u003d 1000\nhashRange: Int \u003d 1000\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532518385943_-2008194264",
      "id": "20180724-154135_937012168",
      "dateCreated": "2018-07-25 11:33:05.943",
      "dateStarted": "2018-08-04 13:23:41.276",
      "dateFinished": "2018-08-04 13:23:44.857",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nPrepare the database",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:23:44.896",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003ePrepare the database\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532518385944_-1362367209",
      "id": "20180724-154204_590917616",
      "dateCreated": "2018-07-25 11:33:05.944",
      "dateStarted": "2018-08-04 13:23:44.951",
      "dateFinished": "2018-08-04 13:23:44.985",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var connection: Connection \u003d null\ntry {\n      connection \u003d DriverManager.getConnection(url, connectionProperties)\n      val statement \u003d connection.createStatement\n      statement.executeQuery(\"\"\"DROP DATABASE IF EXISTS benchmark\"\"\")\n      statement.executeQuery(\"\"\"CREATE DATABASE IF NOT EXISTS benchmark\"\"\")\n    } catch {\n      case e: Exception \u003d\u003e e.printStackTrace()\n    } finally {\n      connection.close()\n    }",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:23:45.035",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "connection: java.sql.Connection \u003d null\nres82: Any \u003d org.mariadb.jdbc.internal.com.read.resultset.SelectResultSet@5472c816\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532518385945_-40375672",
      "id": "20180724-154755_2000804815",
      "dateCreated": "2018-07-25 11:33:05.945",
      "dateStarted": "2018-08-04 13:23:45.079",
      "dateFinished": "2018-08-04 13:23:45.860",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nCreate the sample dataframes to insert",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:23:45.877",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eCreate the sample dataframes to insert\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532600337319_-1063166967",
      "id": "20180726-101857_1062876388",
      "dateCreated": "2018-07-26 10:18:57.319",
      "dateStarted": "2018-08-04 13:23:45.957",
      "dateFinished": "2018-08-04 13:23:45.979",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val asciiDF \u003d sc.makeRDD(0 until asciiRange).map(i \u003d\u003e (i.toChar.toString, i)).toDF(\"ascii_representation\", \"number\").cache()\nasciiDF.count()\nasciiDF.printSchema()\nval randDF \u003d sqlContext.range(0, randRange).withColumn(\"uniform\", rand(seed\u003d23)).withColumn(\"normal\", randn(seed\u003d42)).cache()\nrandDF.count()\nrandDF.printSchema()\nval tmpDF \u003d sc.makeRDD(0 until hashRange).map(i \u003d\u003e (i, i.toString)).toDF(\"number\", \"string\")\ntmpDF.registerTempTable(\"tempDF\")\nval hashDF \u003d sqlContext.sql(\"SELECT number, sha2(string,256) AS sha256, sha2(string,512) AS sha512, md5(string) AS md5 FROM tempDF\").cache()\nhashDF.count()\nhashDF.printSchema()\n\nval asciiDF \u003d sc.makeRDD(0 until asciiRange).map(i \u003d\u003e (i.toChar.toString, i)).toDF(\"ascii_representation\", \"number\").cache()\nasciiDF.count()\nasciiDF.printSchema()\nval randDF \u003d sqlContext.range(0, randRange).withColumn(\"uniform\", rand(seed\u003d23)).withColumn(\"normal\", randn(seed\u003d42)).cache()\nrandDF.count()\nrandDF.printSchema()\nval tmpDF \u003d sc.makeRDD(0 until hashRange).map(i \u003d\u003e (i, i.toString)).toDF(\"number\", \"string\")\ntmpDF.registerTempTable(\"tempDF\")\nval hashDF \u003d sqlContext.sql(\"SELECT number, sha2(string,256) AS sha256, sha2(string,512) AS sha512, md5(string) AS md5 FROM tempDF\").cache()\nhashDF.count()\nhashDF.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:25:35.074",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "asciiDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [ascii_representation: string, number: int]\nres84: Long \u003d 128\nroot\n |-- ascii_representation: string (nullable \u003d true)\n |-- number: integer (nullable \u003d false)\n\nrandDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [id: bigint, uniform: double ... 1 more field]\nres86: Long \u003d 1000\nroot\n |-- id: long (nullable \u003d false)\n |-- uniform: double (nullable \u003d false)\n |-- normal: double (nullable \u003d false)\n\ntmpDF: org.apache.spark.sql.DataFrame \u003d [number: int, string: string]\nwarning: there was one deprecation warning; re-run with -deprecation for details\nhashDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [number: int, sha256: string ... 2 more fields]\nres89: Long \u003d 1000\nroot\n |-- number: integer (nullable \u003d false)\n |-- sha256: string (nullable \u003d true)\n |-- sha512: string (nullable \u003d true)\n |-- md5: string (nullable \u003d true)\n\nasciiDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [ascii_representation: string, number: int]\nres91: Long \u003d 128\nroot\n |-- ascii_representation: string (nullable \u003d true)\n |-- number: integer (nullable \u003d false)\n\nrandDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [id: bigint, uniform: double ... 1 more field]\nres93: Long \u003d 1000\nroot\n |-- id: long (nullable \u003d false)\n |-- uniform: double (nullable \u003d false)\n |-- normal: double (nullable \u003d false)\n\ntmpDF: org.apache.spark.sql.DataFrame \u003d [number: int, string: string]\nwarning: there was one deprecation warning; re-run with -deprecation for details\nhashDF: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [number: int, sha256: string ... 2 more fields]\nres96: Long \u003d 1000\nroot\n |-- number: integer (nullable \u003d false)\n |-- sha256: string (nullable \u003d true)\n |-- sha512: string (nullable \u003d true)\n |-- md5: string (nullable \u003d true)\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://10.5.0.6:4040/jobs/job?id\u003d19",
            "http://10.5.0.6:4040/jobs/job?id\u003d20",
            "http://10.5.0.6:4040/jobs/job?id\u003d21",
            "http://10.5.0.6:4040/jobs/job?id\u003d22",
            "http://10.5.0.6:4040/jobs/job?id\u003d23",
            "http://10.5.0.6:4040/jobs/job?id\u003d24"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532600380996_-465015033",
      "id": "20180726-101940_611366499",
      "dateCreated": "2018-07-26 10:19:40.996",
      "dateStarted": "2018-08-04 13:23:46.095",
      "dateFinished": "2018-08-04 13:23:51.603",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nBenchmark the insertion",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:23:51.698",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eBenchmark the insertion\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532600350362_430988966",
      "id": "20180726-101910_1588942506",
      "dateCreated": "2018-07-26 10:19:10.362",
      "dateStarted": "2018-08-04 13:23:51.731",
      "dateFinished": "2018-08-04 13:23:51.742",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def createColumnStoreAPITable(name: String, schema: String) : Unit \u003d {\n  var connection: Connection \u003d null\n  try {\n      connection \u003d DriverManager.getConnection(\"jdbc:mysql://10.5.0.2:3306/benchmark\", connectionProperties)\n      val statement \u003d connection.createStatement\n      statement.executeQuery(\"CREATE TABLE IF NOT EXISTS \" + name + \" (\" + schema + \") engine\u003dcolumnstore\")\n  } catch {\n      case e: Exception \u003d\u003e e.printStackTrace()\n  } finally {\n      connection.close()\n  }   \n}\n\ndef benchmark(name: String, dataframe: DataFrame, schema: String) \u003d {\n    var t \u003d System.nanoTime()\n    dataframe.write.option(\"createTableOptions\", \"ENGINE\u003dinnodb\").\n    option(\"createTableColumnTypes\", schema).option(\"mode\",\"overwrite\").jdbc(url, \"benchmark.jdbc_innodb_\"+name, connectionProperties)\n    val jdbc_innodb_time \u003d System.nanoTime() - t\n    t \u003d System.nanoTime()\n    dataframe.write.option(\"numPartitions\", 1).option(\"createTableOptions\", \"ENGINE\u003dcolumnstore\").\n    option(\"createTableColumnTypes\", schema).option(\"mode\",\"overwrite\").jdbc(url, \"benchmark.jdbc_columnstore_\"+name, connectionProperties)\n    val jdbc_columnstore_time \u003d System.nanoTime() - t\n    t \u003d System.nanoTime()\n    createColumnStoreAPITable(\"api_columnstore_\"+name, schema)\n    ColumnStoreExporter.export(\"benchmark\", \"api_columnstore_\"+name, dataframe)\n    val api_columnstore_time \u003d System.nanoTime() - t\n    (jdbc_innodb_time, jdbc_columnstore_time, api_columnstore_time)\n}\n\nval ascii_benchmark \u003d benchmark(\"ascii\", asciiDF, \"ascii_representation CHAR(1), number INT\")\nval rand_benchmark \u003d benchmark(\"rand\", randDF, \"id BIGINT, uniform DOUBLE, normal DOUBLE\")\nval hash_benchmark \u003d benchmark(\"hash\", hashDF, \"number BIGINT, sha256 VARCHAR(64), sha512 VARCHAR(128), md5 VARCHAR(32)\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:25:35.041",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 304.0,
              "optionOpen": false
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "createColumnStoreAPITable: (name: String, schema: String)Unit\nbenchmark: (name: String, dataframe: org.apache.spark.sql.DataFrame, schema: String)(Long, Long, Long)\nExecution time: 0.242645\nRows inserted: 128\nTruncation count: 1\nSaturated count: 0\nInvalid count: 0\nascii_benchmark: (Long, Long, Long) \u003d (101011900,3649588700,733657400)\nExecution time: 0.6255085\nRows inserted: 1000\nTruncation count: 0\nSaturated count: 0\nInvalid count: 0\nrand_benchmark: (Long, Long, Long) \u003d (239393700,32110589800,1133282100)\nExecution time: 1.2476653\nRows inserted: 1000\nTruncation count: 0\nSaturated count: 0\nInvalid count: 0\nhash_benchmark: (Long, Long, Long) \u003d (232919600,59596121300,1838054600)\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://10.5.0.6:4040/jobs/job?id\u003d25",
            "http://10.5.0.6:4040/jobs/job?id\u003d26",
            "http://10.5.0.6:4040/jobs/job?id\u003d27",
            "http://10.5.0.6:4040/jobs/job?id\u003d28",
            "http://10.5.0.6:4040/jobs/job?id\u003d29",
            "http://10.5.0.6:4040/jobs/job?id\u003d30",
            "http://10.5.0.6:4040/jobs/job?id\u003d31",
            "http://10.5.0.6:4040/jobs/job?id\u003d32",
            "http://10.5.0.6:4040/jobs/job?id\u003d33"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532600383347_876766928",
      "id": "20180726-101943_392650583",
      "dateCreated": "2018-07-26 10:19:43.347",
      "dateStarted": "2018-08-04 13:23:51.858",
      "dateFinished": "2018-08-04 13:25:32.368",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nShow the comparison in numbers",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:25:32.404",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eShow the comparison in numbers\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532600367389_1961737665",
      "id": "20180726-101927_541094027",
      "dateCreated": "2018-07-26 10:19:27.389",
      "dateStarted": "2018-08-04 13:25:32.478",
      "dateFinished": "2018-08-04 13:25:32.486",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "println(\"jdbc_innodb\\tjdbc_columnstore\\tapi_columnstore\\t\\trows\\t\\titems\")\nprintln(ascii_benchmark._1/1000000000.toDouble+\"s\\t\"+ascii_benchmark._2/1000000000.toDouble+\"s\\t\\t\"+ascii_benchmark._3/1000000000.toDouble+\"s\\t\\t\"+asciiDF.count+\"\\t\\t\"+asciiDF.count*asciiDF.columns.size)\nprintln(rand_benchmark._1/1000000000.toDouble+\"s\\t\"+rand_benchmark._2/1000000000.toDouble+\"s\\t\\t\"+rand_benchmark._3/1000000000.toDouble+\"s\\t\\t\"+randDF.count+\"\\t\\t\"+randDF.count*randDF.columns.size)\nprintln(hash_benchmark._1/1000000000.toDouble+\"s\\t\"+hash_benchmark._2/1000000000.toDouble+\"s\\t\\t\"+hash_benchmark._3/1000000000.toDouble+\"s\\t\\t\"+hashDF.count+\"\\t\\t\"+hashDF.count*hashDF.columns.size)",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:25:32.573",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": true,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "jdbc_innodb": "string",
                      "jdbc_columnstore": "string",
                      "api_columnstore": "string",
                      "rows": "string",
                      "items": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "jdbc_innodb",
                  "index": 0.0,
                  "aggr": "sum"
                },
                {
                  "name": "jdbc_columnstore",
                  "index": 1.0,
                  "aggr": "sum"
                },
                {
                  "name": "api_columnstore",
                  "index": 2.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": []
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "jdbc_innodb\tjdbc_columnstore\tapi_columnstore\t\trows\t\titems\n0.1010119s\t3.6495887s\t\t0.7336574s\t\t128\t\t256\n0.2393937s\t32.1105898s\t\t1.1332821s\t\t1000\t\t3000\n0.2329196s\t59.5961213s\t\t1.8380546s\t\t1000\t\t4000\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://10.5.0.6:4040/jobs/job?id\u003d34",
            "http://10.5.0.6:4040/jobs/job?id\u003d35",
            "http://10.5.0.6:4040/jobs/job?id\u003d36",
            "http://10.5.0.6:4040/jobs/job?id\u003d37",
            "http://10.5.0.6:4040/jobs/job?id\u003d38",
            "http://10.5.0.6:4040/jobs/job?id\u003d39"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532600386131_-664858900",
      "id": "20180726-101946_912860111",
      "dateCreated": "2018-07-26 10:19:46.131",
      "dateStarted": "2018-08-04 13:25:32.624",
      "dateFinished": "2018-08-04 13:25:33.858",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\nprint(\"\"\"%table\n\"\"\")\n\nprint(\"Test\\tascii_benchmark\\trand_benchmark\\thash_benchmark\\n\")\nprint(\"JDBC_innodb\\t\"+ascii_benchmark._1/1000000000.toDouble+\"\\t\"+rand_benchmark._1/1000000000.toDouble+\"\\t\"+hash_benchmark._1/1000000000.toDouble+\"\\n\")\nprint(\"JDBC_columnstore\\t\"+ascii_benchmark._2/1000000000.toDouble+\"\\t\"+rand_benchmark._2/1000000000.toDouble+\"\\t\"+hash_benchmark._2/1000000000.toDouble+\"\\n\")\nprint(\"API_columnstore\\t\"+ascii_benchmark._3/1000000000.toDouble+\"\\t\"+rand_benchmark._3/1000000000.toDouble+\"\\t\"+hash_benchmark._3/1000000000.toDouble+\"\\n\")\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:25:33.926",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "test",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "times",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0.0,
                          "direction": "desc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "ascii_benchmark",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "rand_benchmark",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "hash_benchmark",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 250.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "test": "string",
                      "times": "string",
                      "ascii_benchmark": "string",
                      "rand_benchmark": "string",
                      "hash_benchmark": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": false
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "lineWithFocus": true
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "Test",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "ascii_benchmark",
                  "index": 1.0,
                  "aggr": "sum"
                },
                {
                  "name": "rand_benchmark",
                  "index": 2.0,
                  "aggr": "sum"
                },
                {
                  "name": "hash_benchmark",
                  "index": 3.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Test\tascii_benchmark\trand_benchmark\thash_benchmark\nJDBC_innodb\t0.1010119\t0.2393937\t0.2329196\nJDBC_columnstore\t3.6495887\t32.1105898\t59.5961213\nAPI_columnstore\t0.7336574\t1.1332821\t1.8380546\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532971205427_-1010104825",
      "id": "20180730-172005_778846879",
      "dateCreated": "2018-07-30 17:20:05.427",
      "dateStarted": "2018-08-04 13:25:33.980",
      "dateFinished": "2018-08-04 13:25:34.869",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:25:34.878",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1532968687723_466043512",
      "id": "20180730-163807_2060257208",
      "dateCreated": "2018-07-30 16:38:07.723",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "dateUpdated": "2018-08-04 13:25:34.961",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1532609048042_-293525784",
      "id": "20180726-124408_722623084",
      "dateCreated": "2018-07-26 12:44:08.042",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "MariaDB AX Driver/Scala JDBC vs API Benchmark",
  "id": "2DP8X2U8D",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}